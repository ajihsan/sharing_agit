# -*- coding: utf-8 -*-
"""Airflow Hands-on.ipynb

Automatically generated by Colaboratory.


Airflow Example
"""

from airflow import DAG
from airflow.operators.bash_operator import BashOperator
from datetime import datetime, timedelta


default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2015, 6, 1),
    'email': ['airflow@example.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
    # 'queue': 'bash_queue',
    # 'pool': 'backfill',
    # 'priority_weight': 10,
    # 'end_date': datetime(2016, 1, 1),
}

dag = DAG('tutorial', default_args=default_args, schedule_interval=timedelta(days=1))

# t1, t2 and t3 are examples of tasks created by instantiating operators
t1 = BashOperator(
    task_id='print_date',
    bash_command='date',
    dag=dag)

t2 = BashOperator(
    task_id='sleep',
    bash_command='sleep 5',
    retries=3,
    dag=dag)

templated_command = """
    {% for i in range(5) %}
        echo "{{ ds }}"
        echo "{{ macros.ds_add(ds, 7)}}"
        echo "{{ params.my_param }}"
    {% endfor %}
"""

t3 = BashOperator(
    task_id='templated',
    bash_command=templated_command,
    params={'my_param': 'Parameter I passed in'},
    dag=dag)

BashOperator(
  task_id='task4',
  bash_command='sleep 5',
  retries=3,
  dag=dag)

t1 >> [t2,t3]

"""Airflow Exercise 1 (Answer)"""

"""
Buat Airflow DAG dengan nama: exercise1_{nama}
yang dimulai pada tanggal: 27 September 2019 
Schedule akan berjalan pada: jam setengah 4 pagi di hari kerja saja
dengan bentuk DAG seperti DAG_exercise1.PNG
"""

from airflow import DAG
from airflow.operators.bash_operator import BashOperator
from datetime import datetime, timedelta


default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2019, 9, 18),
    'email': ['airflow@example.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
    # 'queue': 'bash_queue',
    # 'pool': 'backfill',
    # 'priority_weight': 10,
    # 'end_date': datetime(2016, 1, 1),
}

dag = DAG('exercise1_aji', default_args=default_args, schedule_interval="30 3 * * 1-5")

# t1, t2 and t3 are examples of tasks created by instantiating operators
t1 = BashOperator(
    task_id='task_1',
    bash_command='ngasal_inimah',
    dag=dag)

t2 = BashOperator(
    task_id='task_2',
    bash_command='echo "test"',
    trigger_rule='one_failed',
    dag=dag)

templated_command = """
    echo "{{ params.my_param }}"
"""

t3 = BashOperator(
    task_id='task_3',
    bash_command=templated_command,
    params={'my_param': 'Parameter I passed in'},
    trigger_rule='one_success',
    dag=dag)

t4 = BashOperator(
    task_id='task_4',
    bash_command='ngasal_inimah',
    trigger_rule='one_failed',
    dag=dag)

t5 = BashOperator(
    task_id='task_5',
    bash_command='ngasal_inimah',
    dag=dag)

t6 = BashOperator(
    task_id='task_6',
    bash_command='echo "berhasil"',
    trigger_rule='all_failed',
    dag=dag)

t1 >> t2 
t2 >> [t3,t4]
[t3,t4,t5] >> t6

"""Airflow Exercise 2 (Answer)"""

"""
Buat Airflow DAG dengan nama: exercise2_{nama}
(Fokus pada dag)

buat 100 task secara serial dengan penamaan dan output di command line:
task_id  | output CLI

task_1   | Ini task nomor 1
task_2   | Ini task nomor 2
...
task_100 | Ini task nomor 100


"""

from airflow import DAG
from airflow.operators.bash_operator import BashOperator
from datetime import datetime, timedelta


default_args = {
    'owner': 'airflow',
    'depends_on_past': False,
    'start_date': datetime(2019, 9, 18),
    'email': ['airflow@example.com'],
    'email_on_failure': False,
    'email_on_retry': False,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
    # 'queue': 'bash_queue',
    # 'pool': 'backfill',
    # 'priority_weight': 10,
    # 'end_date': datetime(2016, 1, 1),
}

dag = DAG('exercise2_aji',
          default_args=default_args,
          schedule_interval='00 06 * * *')



templated_command = """
    echo "{{ params.my_param }}"
"""


a = []
for i in range(1,101):
    a.append(BashOperator(
        task_id='task_'+str(i),
        bash_command=templated_command,
    params={'my_param': 'Ini task nomor {}'.format(str(i))},
        dag=dag))
    if i != 1: 
        a[i-2] >> a[i-1]